// <auto-generated />
using InventorySystemAPI.Context;
using InventorySystemAPI.Models.User;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace InventorySystemAPI.Migrations
{
    [DbContext(typeof(FloorCenterContext))]
    [Migration("20180123061555_RemoveOriginColumnFromWHInventoryAndAddedColumnDecorator")]
    partial class RemoveOriginColumnFromWHInventoryAndAddedColumnDecorator
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InventorySystemAPI.Models.Company.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("InventorySystemAPI.Models.Item.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Remarks");

                    b.Property<int?>("SerialNumber");

                    b.Property<int?>("SizeId");

                    b.Property<string>("Tonality");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("InventorySystemAPI.Models.Size.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("InventorySystemAPI.Models.Store.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<int?>("CompanyId");

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name");

                    b.Property<int?>("WarehouseId");

                    b.HasKey("Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("InventorySystemAPI.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int?>("Assignment");

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FullName");

                    b.Property<string>("Password");

                    b.Property<int?>("StoreId");

                    b.Property<string>("UserName");

                    b.Property<int?>("UserType");

                    b.Property<int?>("WarehouseId");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("InventorySystemAPI.Models.Warehouse.Inventory.WHInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CheckedBy");

                    b.Property<DateTime?>("DRDate")
                        .HasColumnType("date");

                    b.Property<int?>("DRNumber");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("date");

                    b.Property<int?>("PONumber");

                    b.Property<DateTime?>("ReceivedDate");

                    b.Property<string>("Remarks");

                    b.Property<int?>("WarehouseId");

                    b.HasKey("Id");

                    b.ToTable("WHInventory");
                });

            modelBuilder.Entity("InventorySystemAPI.Models.Warehouse.Inventory.WHInventoryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<int?>("ItemId");

                    b.Property<int?>("Quantity");

                    b.Property<string>("Remarks");

                    b.Property<int?>("WHInventoryId");

                    b.HasKey("Id");

                    b.ToTable("WHInventoryDetail");
                });

            modelBuilder.Entity("InventorySystemAPI.Models.Warehouse.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Warehouse");
                });
#pragma warning restore 612, 618
        }
    }
}
